services:

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    env_file:
      - ./configs/env/services/dozzle.env
    ports:
      - "${DOZZLE_APP_PORT:-8080}:8080"   # Port 8080 exposed for UI access
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

  postgres:
    image: postgres:16.2
    container_name: postgres
    env_file:
      - ./configs/env/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-service:
    build: ./db-service
    container_name: db-service
    env_file:
      - ./configs/env/services/db-service.env
    depends_on:
      postgres:
        condition: service_healthy

  user-service:
    build: ./user-service
    container_name: user-service
    env_file:
      - ./configs/env/services/user-service.env
    depends_on:
      postgres:
        condition: service_healthy
      db-service:
        condition: service_completed_successfully
    ports:
      - "${USER_SERVICE_APP_PORT:-8081}:8080"
      - "${USER_SERVICE_DEBUG_PORT:-5005}:5005"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  product-service:
    build: ./product-service
    container_name: product-service
    env_file:
      - ./configs/env/services/product-service.env
    depends_on:
      postgres:
        condition: service_healthy
      db-service:
        condition: service_completed_successfully
    ports:
      - "${PRODUCT_SERVICE_APP_PORT:-8082}:8080"
      - "${PRODUCT_SERVICE_DEBUG_PORT:-5006}:5005"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  db_data: